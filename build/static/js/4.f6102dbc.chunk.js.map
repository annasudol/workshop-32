{"version":3,"sources":["booking/components/RatingChart.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","recharts__WEBPACK_IMPORTED_MODULE_1__","Example","_ref","data","a","createElement","height","type","dataKey","name","unit","domain","range","content","CustomTooltip","cursor","strokeDasharray","fill","props","active","payload","length","style","backgroundColor","border","margin","padding","map","v","key","value"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAyCeO,UA7BC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACdL,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAqBM,OAAQ,KAC3BR,EAAAM,EAAAC,cAACL,EAAA,EAAD,KACEF,EAAAM,EAAAC,cAACL,EAAA,EAAD,MACAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAOO,KAAK,SAASC,QAAQ,QAAQC,KAAK,OAAOC,KAAK,YACtDZ,EAAAM,EAAAC,cAACL,EAAA,EAAD,CACEW,OAAQ,CAAC,EAAG,IACZJ,KAAK,SACLC,QAAQ,SACRC,KAAK,mBACLC,KAAK,QAEPZ,EAAAM,EAAAC,cAACL,EAAA,EAAD,CACEO,KAAK,SACLC,QAAQ,UACRI,MAAO,CAAC,GAAI,KACZH,KAAK,2BAEPX,EAAAM,EAAAC,cAACL,EAAA,EAAD,CACEa,QAASf,EAAAM,EAAAC,cAACS,EAAD,MACTC,OAAQ,CACNC,gBAAiB,SAGrBlB,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAASG,KAAMA,EAAMc,KAAK,eAOhC,IAAMH,EAAgB,SAAAI,GAAS,IACrBC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OAAID,GAAUC,GAAWA,EAAQC,OAE7BvB,EAAAM,EAAAC,cAAA,OACEiB,MAAO,CACLC,gBAAiB,OACjBC,OAAQ,iBACRC,OAAQ,EACRC,QAAS,KAGX5B,EAAAM,EAAAC,cAAA,SACEP,EAAAM,EAAAC,cAAA,cAASe,EAAQ,GAAGA,QAAQX,OAE7BW,EAAQO,IAAI,SAAAC,GAAC,OACZ9B,EAAAM,EAAAC,cAAA,QAAMwB,IAAKD,EAAEnB,MACVmB,EAAEnB,KADL,IACY,IACVX,EAAAM,EAAAC,cAAA,cACGuB,EAAEE,MACFF,EAAElB,KACHZ,EAAAM,EAAAC,cAAA,gBAQL","file":"static/js/4.f6102dbc.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  ZAxis,\n} from 'recharts';\n\nconst Example = ({ data }) => (\n  <ResponsiveContainer height={200}>\n    <ScatterChart>\n      <CartesianGrid />\n      <XAxis type=\"number\" dataKey=\"price\" name=\"cena\" unit=\"zł\" />\n      <YAxis\n        domain={[0, 10]}\n        type=\"number\"\n        dataKey=\"rating\"\n        name=\"ocena gości\"\n        unit=\"/10\"\n      />\n      <ZAxis\n        type=\"number\"\n        dataKey=\"reviews\"\n        range={[30, 500]}\n        name=\"ilość opinii\"\n      />\n      <Tooltip\n        content={<CustomTooltip />}\n        cursor={{\n          strokeDasharray: '3 3',\n        }}\n      />\n      <Scatter data={data} fill=\"#2185d0\" />\n    </ScatterChart>\n  </ResponsiveContainer>\n);\n\nexport default Example;\n\nconst CustomTooltip = props => {\n  const { active, payload } = props;\n  if (active && payload && payload.length) {\n    return (\n      <div\n        style={{\n          backgroundColor: '#fff',\n          border: '1px solid #999',\n          margin: 0,\n          padding: 10,\n        }}\n      >\n        <p>\n          <strong>{payload[0].payload.name}</strong>\n        </p>\n        {payload.map(v => (\n          <span key={v.name}>\n            {v.name}:{' '}\n            <strong>\n              {v.value}\n              {v.unit}\n              <br />\n            </strong>\n          </span>\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n};\n"],"sourceRoot":""}